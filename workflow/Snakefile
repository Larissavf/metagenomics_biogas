import os
configfile: 'config/config.yaml'

#verzamelen van sample namen
d = {}
with open('config/temp_input.txt','w') as file:
   for sample_name in config['test']:
       basename = os.path.splitext(sample_name)
       basename = os.path.basename(basename[0])
       d[basename] = sample_name
       file.write(sample_name + '\t')

OD = config['output_dir']
samples = list((d.keys()))



rule all:
   input:
         expand(OD + 'taxonomy/{sample}_output.txt', sample=samples),
         expand(OD +'qc/nanoqc/{sample}', sample=samples),
         expand(OD + 'taxonomy/{sample}_output.txt', sample=SAMPLES)


rule nanoqc:
   input:
       lambda wildcards: d[wildcards.sample]
   output:
       directory(OD+'qc/nanoqc/{sample}')
   shell:
       "nanoQC -o {output} {input}"

rule nanofilt:
   input:
       lambda wildcards: d[wildcards.sample]
   output:
       OD + 'qc/nanofilt/{sample}.fastq'
   shell:
        "NanoFilt --headcrop 40 --tailcrop 20 --quality 11 {input} > {output} "

rule kraken2:
   input:
       OD + 'qc/nanofilt/{sample}.fastq'
   output:
       OD + 'taxonomy/{sample}_output.txt'
   log:
       OD + 'log/{sample}_report.log'
   shell:
       "kraken2 --db {config['kraken_db']} --report {log} --output {output} {input}"

rule kraken_processing:
    input:
        boven: config['kraken_bov_out']
        midden: config['kraken_mid_out']
        onder: config['kraken_ond_out']
        pacques: config['kraken_pac_out']
    output:
        '../pic/venn.png'
    shell:
    "python scripts/proc_kraak_output.py {input.boven} {input.midden} {input.onder} {input.pacques}"
